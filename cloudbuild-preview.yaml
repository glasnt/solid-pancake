steps:
    - name: 'gcr.io/cloud-builders/docker'
      args: ['build', '-t', 
             'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${_PR_NUMBER}-${SHORT_SHA}', '.']

    - name: 'gcr.io/cloud-builders/docker'
      args: ['push', 
             'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${_PR_NUMBER}-${SHORT_SHA}' ]

    - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
      entrypoint: 'bash'
      args: 
        - '-c'
        - |
          gcloud run deploy ${_SERVICE_NAME} \
            --platform managed --region ${_REGION} \
            --image gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${_PR_NUMBER}-${SHORT_SHA} \
            #            --revision-suffix=pr-${_PR_NUMBER}-${SHORT_SHA} \
            --no-traffic

          gcloud beta run services update-traffic ${_SERVICE_NAME} \
            --platform managed --region ${_REGION} \
            #--update-tags=pr-${_PR_NUMBER}=${_SERVICE_NAME}-pr-${_PR_NUMBER}-$SHORT_SHA
            --update-tags=pr-${_PR_NUMBER}=LATEST

          echo $(gcloud run services describe ${_SERVICE_NAME} \
                  --platform managed --region ${_REGION} \
                  --format "value(status.address.url)" \
          ) > /workspace/url.txt
          cat /workspace/url.txt

    - name: 'gcr.io/${PROJECT_ID}/set-check-status' #:$SHORT_SHA'
      entrypoint: bash
      args: 
        - '-c'
        - |
          python /app/set-check-status.py \
            --project-id ${PROJECT_ID} \
            --repo-name ${_GITHUB_USER}/${REPO_NAME} \
            --commit-sha ${SHORT_SHA} \
            --target-tag pr-${_PR_NUMBER} \
            --service-url $(cat /workspace/url.txt)


substitutions:
    _SERVICE_NAME: solid-pancake
    _REGION: us-central1
    _GITHUB_USER: glasnt

